function RGB = m_I2RGB(I, L, C, K)
% [RGB] = m_I2RGB(I, L, C, [K])
% Makes a RGB luminance array for the desired isoluminance indexes.
% Inputs:
% I = isoluminance contrast indexes (I=log(C1/C2)) as a vertical vector
% L = mean (both frames) luinance level (in Cd/m2)
% C = variable stimulus RGB (normalized luminance) (yelow =[.6, .4, 0])
%    C1=C(:,:,1); C2=C(:,:,2). Example: for R and G, C=[1,0,0;0,1,0];.
% [K] = Constant color / luminance (for each cannon, in Cd/m2) if absent
%    K=[0,0,0]
% Outputs:
% [RGB] is the luminance for the stimuli (C1 = RGB(:,:,1); C2 = RGB(:,:,2)
% If no output argument (RGB) it makes a figure with the luminances.
%
% mario fiorani 09/2016


function_name= 'm_I2RGB';

if nargin < 4, K=[0,0,0]; end

sz=length(I);

C = C ./ repmat(sum(C,2),1,3); % normalize to one

L2=L*2; % the two stimuli luminance sum 
L2=L2-sum(K); % remove constant color

RGB=zeros(sz,3,2); % initialize RGB



% L=C1+C2;
% I=log(C1/C2);
% exp(I)=C1/C2;
% C1= C2 * exp(I);
% C2= C1 / exp(I);

% C2= (L-C2) / exp(I);
% (L-C2) / C2 = exp(I);
% L/C2 -1 = exp(I);

% C2 = L / (exp(I)+1);

% make the rgb table
RGB(:,1,2) = L2 ./ (exp(I)+1);
RGB(:,:,2)=repmat(RGB(:,1,2),1,3);
RGB(:,:,1)= L2 - RGB(:,:,2);

for n=1:2, % apply normalized color
    RGB(:,:,n) = RGB(:,:,n).* repmat(C(n,:),sz,1);
end

RGB = RGB + repmat(K, sz, 1, 2);

if nargout==0, % make a figure
figure
rgb_s={'L1', 'L2', 'R1', 'G1', 'B1', 'R2', 'G2', 'B2', 'KR', 'KG', 'KB'};
plot(I,sum(RGB(:,:,1),2), 'vk', I,sum(RGB(:,:,2),2), '^k')
hold on
plot(I, RGB(:,1,1), 'ro', I, RGB(:,2,1), 'go', I, RGB(:,3,1), 'bo')
plot(I, RGB(:,1,2), 'rd', I, RGB(:,2,2), 'gd', I, RGB(:,3,2), 'bd')
plot(I, repmat(K(:,1),size(I)), 'r+', I, repmat(K(:,2),size(I)), 'g+', I, repmat(K(:,3),size(I)), 'b+')


title([function_name '     L=' num2str(L) ',    C1=' num2str(C(1,:))...
    ',    C2=' num2str(C(2,:))  ',    K=' num2str(K) ])
xlabel('Isoluminance Index (I=log(C1/C2))')
ylabel('Luminance (L) in Cd/m2')
%legend(rgb_s, 'Location', 'WestOutside', 'Orientation', 'Horizontal')
legend(rgb_s, 'Location', 'EastOutside')
%legend BOXOFF

end
